#!/bin/bash -e

source "$SOWLIB/pluginutils"
source "$SOWLIB/k8s"

command="${3:-"upgrade"}"

K8S_setKubeConfig "$PLUGININSTANCE" "$dir/kubeconfig"

jq .values <<< "$PLUGINCONFIGJSON" > "$dir/values.json"

getRequiredValue "source" "source" PLUGINCONFIGJSON
getRequiredValue name "name" PLUGINCONFIGJSON
getRequiredValue namespace "namespace" PLUGINCONFIGJSON
getValue command "command" PLUGINCONFIGJSON
getValueList helm_flags_deploy "flags.deploy" PLUGINCONFIGJSON
getValueList helm_flags_delete "flags.delete" PLUGINCONFIGJSON

if [ -z "$command" ]; then
  command="upgrade"
fi

# Writes from stdin to file
dump() {
    if [ -z ${1:-""} ]; then
        fail "dump: no path given!"
    fi
    cat > "$1"
}

src="$(lookupFile -d "$source")"
if [ -z "$src" ]; then
    if [ -f "$source" ]; then
        src="$source"
    else
        fail "helm source $source not found"
    fi
fi

case "$command" in
    ("upgrade")
        flags="--install --force --wait"
        pipe_cmd="cat"
        ;;
    ("template")
        render_path=""
        flags="--name"
        pipe_cmd="dump $dir/rendered_charts.yaml"
        ;;
    (*)
        fail "Unknown command for helm: '$command'"
        ;;
esac

deploy() {
    info "Running helm $command for $name ..."
    exec_cmd helm $command $flags $name \
        --values "$dir/values.json" \
        --namespace $namespace \
        $(echo "${helm_flags_deploy[@]}") \
        "$src" \
        | $pipe_cmd
}

delete() {
    if [ "$command" = "upgrade" ]; then
        info "Deleting helm deployment for $name"
        tmp="/tmp/helmplugin$$"
        exec_cmd helm delete \
            --purge \
            $name \
            $(echo "${helm_flags_delete[@]}") 2>"$tmp" || {
                error="$(cat "$tmp")"
                if [ "$error" != "Error: release: \"$name\" not found" ]; then
                    rm -f "$tmp"
                    fail "$error"
                else
                    info "release $name already deleted"
                fi
            }
            rm -f "$tmp"
    fi
}

case "$1" in
    deploy) deploy "$@";;
    delete) delete "$@";;
    *) fail "unsupported action $1"
esac
